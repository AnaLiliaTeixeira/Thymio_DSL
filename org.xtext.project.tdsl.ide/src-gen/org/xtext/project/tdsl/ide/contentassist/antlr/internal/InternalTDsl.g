/*
 * generated by Xtext 2.34.0
 */
grammar InternalTDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.project.tdsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.project.tdsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.project.tdsl.services.TDslGrammarAccess;

}
@parser::members {
	private TDslGrammarAccess grammarAccess;

	public void setGrammarAccess(TDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleThymioDSL
entryRuleThymioDSL
:
{ before(grammarAccess.getThymioDSLRule()); }
	 ruleThymioDSL
{ after(grammarAccess.getThymioDSLRule()); } 
	 EOF 
;

// Rule ThymioDSL
ruleThymioDSL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThymioDSLAccess().getStatementAssignment()); }
		(rule__ThymioDSL__StatementAssignment)*
		{ after(grammarAccess.getThymioDSLAccess().getStatementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getAlternatives()); }
		(rule__Event__Alternatives)
		{ after(grammarAccess.getEventAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getGroup()); }
		(rule__Action__Group__0)
		{ after(grammarAccess.getActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMovementAction
entryRuleMovementAction
:
{ before(grammarAccess.getMovementActionRule()); }
	 ruleMovementAction
{ after(grammarAccess.getMovementActionRule()); } 
	 EOF 
;

// Rule MovementAction
ruleMovementAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMovementActionAccess().getAlternatives()); }
		(rule__MovementAction__Alternatives)
		{ after(grammarAccess.getMovementActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSoundAction
entryRuleSoundAction
:
{ before(grammarAccess.getSoundActionRule()); }
	 ruleSoundAction
{ after(grammarAccess.getSoundActionRule()); } 
	 EOF 
;

// Rule SoundAction
ruleSoundAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSoundActionAccess().getAlternatives()); }
		(rule__SoundAction__Alternatives)
		{ after(grammarAccess.getSoundActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColorBottomAction
entryRuleColorBottomAction
:
{ before(grammarAccess.getColorBottomActionRule()); }
	 ruleColorBottomAction
{ after(grammarAccess.getColorBottomActionRule()); } 
	 EOF 
;

// Rule ColorBottomAction
ruleColorBottomAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorBottomActionAccess().getAlternatives()); }
		(rule__ColorBottomAction__Alternatives)
		{ after(grammarAccess.getColorBottomActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColorTopAction
entryRuleColorTopAction
:
{ before(grammarAccess.getColorTopActionRule()); }
	 ruleColorTopAction
{ after(grammarAccess.getColorTopActionRule()); } 
	 EOF 
;

// Rule ColorTopAction
ruleColorTopAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorTopActionAccess().getAlternatives()); }
		(rule__ColorTopAction__Alternatives)
		{ after(grammarAccess.getColorTopActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpperEvent
entryRuleUpperEvent
:
{ before(grammarAccess.getUpperEventRule()); }
	 ruleUpperEvent
{ after(grammarAccess.getUpperEventRule()); } 
	 EOF 
;

// Rule UpperEvent
ruleUpperEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpperEventAccess().getGroup()); }
		(rule__UpperEvent__Group__0)
		{ after(grammarAccess.getUpperEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProxEvent
entryRuleProxEvent
:
{ before(grammarAccess.getProxEventRule()); }
	 ruleProxEvent
{ after(grammarAccess.getProxEventRule()); } 
	 EOF 
;

// Rule ProxEvent
ruleProxEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProxEventAccess().getGroup()); }
		(rule__ProxEvent__Group__0)
		{ after(grammarAccess.getProxEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensor
entryRuleSensor
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorAccess().getAlternatives()); }
		(rule__Sensor__Alternatives)
		{ after(grammarAccess.getSensorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTapEvent
entryRuleTapEvent
:
{ before(grammarAccess.getTapEventRule()); }
	 ruleTapEvent
{ after(grammarAccess.getTapEventRule()); } 
	 EOF 
;

// Rule TapEvent
ruleTapEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTapEventAccess().getGroup()); }
		(rule__TapEvent__Group__0)
		{ after(grammarAccess.getTapEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClapEvent
entryRuleClapEvent
:
{ before(grammarAccess.getClapEventRule()); }
	 ruleClapEvent
{ after(grammarAccess.getClapEventRule()); } 
	 EOF 
;

// Rule ClapEvent
ruleClapEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClapEventAccess().getGroup()); }
		(rule__ClapEvent__Group__0)
		{ after(grammarAccess.getClapEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression
:
{ before(grammarAccess.getArithmeticExpressionRule()); }
	 ruleArithmeticExpression
{ after(grammarAccess.getArithmeticExpressionRule()); } 
	 EOF 
;

// Rule ArithmeticExpression
ruleArithmeticExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getGroup()); }
		(rule__ArithmeticExpression__Group__0)
		{ after(grammarAccess.getArithmeticExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEIntegerObject
entryRuleEIntegerObject
:
{ before(grammarAccess.getEIntegerObjectRule()); }
	 ruleEIntegerObject
{ after(grammarAccess.getEIntegerObjectRule()); } 
	 EOF 
;

// Rule EIntegerObject
ruleEIntegerObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntegerObjectAccess().getGroup()); }
		(rule__EIntegerObject__Group__0)
		{ after(grammarAccess.getEIntegerObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColor
entryRuleColor
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorAccess().getGroup()); }
		(rule__Color__Group__0)
		{ after(grammarAccess.getColorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSound
entryRuleSound
:
{ before(grammarAccess.getSoundRule()); }
	 ruleSound
{ after(grammarAccess.getSoundRule()); } 
	 EOF 
;

// Rule Sound
ruleSound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSoundAccess().getAlternatives()); }
		(rule__Sound__Alternatives)
		{ after(grammarAccess.getSoundAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleButtons
entryRuleButtons
:
{ before(grammarAccess.getButtonsRule()); }
	 ruleButtons
{ after(grammarAccess.getButtonsRule()); } 
	 EOF 
;

// Rule Buttons
ruleButtons 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButtonsAccess().getAlternatives()); }
		(rule__Buttons__Alternatives)
		{ after(grammarAccess.getButtonsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getAlternatives()); }
		(rule__State__Alternatives)
		{ after(grammarAccess.getStateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightLeft
entryRuleRightLeft
:
{ before(grammarAccess.getRightLeftRule()); }
	 ruleRightLeft
{ after(grammarAccess.getRightLeftRule()); } 
	 EOF 
;

// Rule RightLeft
ruleRightLeft 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightLeftAccess().getAlternatives()); }
		(rule__RightLeft__Alternatives)
		{ after(grammarAccess.getRightLeftAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHorizontalSensors
entryRuleHorizontalSensors
:
{ before(grammarAccess.getHorizontalSensorsRule()); }
	 ruleHorizontalSensors
{ after(grammarAccess.getHorizontalSensorsRule()); } 
	 EOF 
;

// Rule HorizontalSensors
ruleHorizontalSensors 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHorizontalSensorsAccess().getAlternatives()); }
		(rule__HorizontalSensors__Alternatives)
		{ after(grammarAccess.getHorizontalSensorsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIfstatementAssignment_2_0()); }
		(rule__Statement__IfstatementAssignment_2_0)
		{ after(grammarAccess.getStatementAccess().getIfstatementAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getActionAssignment_2_1()); }
		(rule__Statement__ActionAssignment_2_1)
		{ after(grammarAccess.getStatementAccess().getActionAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getUpperEventParserRuleCall_0()); }
		ruleUpperEvent
		{ after(grammarAccess.getEventAccess().getUpperEventParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventAccess().getProxEventParserRuleCall_1()); }
		ruleProxEvent
		{ after(grammarAccess.getEventAccess().getProxEventParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getEventAccess().getTapEventParserRuleCall_2()); }
		ruleTapEvent
		{ after(grammarAccess.getEventAccess().getTapEventParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getEventAccess().getClapEventParserRuleCall_3()); }
		ruleClapEvent
		{ after(grammarAccess.getEventAccess().getClapEventParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getMovementActionParserRuleCall_1_0()); }
		ruleMovementAction
		{ after(grammarAccess.getActionAccess().getMovementActionParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getSoundActionParserRuleCall_1_1()); }
		ruleSoundAction
		{ after(grammarAccess.getActionAccess().getSoundActionParserRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getColorBottomActionParserRuleCall_1_2()); }
		ruleColorBottomAction
		{ after(grammarAccess.getActionAccess().getColorBottomActionParserRuleCall_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getColorTopActionParserRuleCall_1_3()); }
		ruleColorTopAction
		{ after(grammarAccess.getActionAccess().getColorTopActionParserRuleCall_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMovementActionAccess().getGroup_0()); }
		(rule__MovementAction__Group_0__0)
		{ after(grammarAccess.getMovementActionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMovementActionAccess().getGroup_1()); }
		(rule__MovementAction__Group_1__0)
		{ after(grammarAccess.getMovementActionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getMovementActionAccess().getGroup_2()); }
		(rule__MovementAction__Group_2__0)
		{ after(grammarAccess.getMovementActionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getMovementActionAccess().getGroup_3()); }
		(rule__MovementAction__Group_3__0)
		{ after(grammarAccess.getMovementActionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__DirectionAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMovementActionAccess().getDirectionForwardKeyword_0_1_0_0()); }
		'forward'
		{ after(grammarAccess.getMovementActionAccess().getDirectionForwardKeyword_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMovementActionAccess().getDirectionBackwardKeyword_0_1_0_1()); }
		'backward'
		{ after(grammarAccess.getMovementActionAccess().getDirectionBackwardKeyword_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundActionAccess().getGroup_0()); }
		(rule__SoundAction__Group_0__0)
		{ after(grammarAccess.getSoundActionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSoundActionAccess().getGroup_1()); }
		(rule__SoundAction__Group_1__0)
		{ after(grammarAccess.getSoundActionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorBottomActionAccess().getGroup_0()); }
		(rule__ColorBottomAction__Group_0__0)
		{ after(grammarAccess.getColorBottomActionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorBottomActionAccess().getGroup_1()); }
		(rule__ColorBottomAction__Group_1__0)
		{ after(grammarAccess.getColorBottomActionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorTopActionAccess().getGroup_0()); }
		(rule__ColorTopAction__Group_0__0)
		{ after(grammarAccess.getColorTopActionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorTopActionAccess().getGroup_1()); }
		(rule__ColorTopAction__Group_1__0)
		{ after(grammarAccess.getColorTopActionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getGroup_0()); }
		(rule__Sensor__Group_0__0)
		{ after(grammarAccess.getSensorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getGroup_1()); }
		(rule__Sensor__Group_1__0)
		{ after(grammarAccess.getSensorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Alternatives_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getProximityKeyword_0_4_0()); }
		'proximity'
		{ after(grammarAccess.getSensorAccess().getProximityKeyword_0_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getGroup_0_4_1()); }
		(rule__Sensor__Group_0_4_1__0)
		{ after(grammarAccess.getSensorAccess().getGroup_0_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Alternatives_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getProximityKeyword_1_4_0()); }
		'proximity'
		{ after(grammarAccess.getSensorAccess().getProximityKeyword_1_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getGroup_1_4_1()); }
		(rule__Sensor__Group_1_4_1__0)
		{ after(grammarAccess.getSensorAccess().getGroup_1_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getBlackKeyword_1_4_2()); }
		'black'
		{ after(grammarAccess.getSensorAccess().getBlackKeyword_1_4_2()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getWhiteKeyword_1_4_3()); }
		'white'
		{ after(grammarAccess.getSensorAccess().getWhiteKeyword_1_4_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__OperatorAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOperatorAndKeyword_1_0_0_0()); }
		'and'
		{ after(grammarAccess.getConditionAccess().getOperatorAndKeyword_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getOperatorOrKeyword_1_0_0_1()); }
		'or'
		{ after(grammarAccess.getConditionAccess().getOperatorOrKeyword_1_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__OperatorAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getOperatorPlusSignKeyword_1_0_0_0()); }
		'+'
		{ after(grammarAccess.getArithmeticExpressionAccess().getOperatorPlusSignKeyword_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getOperatorHyphenMinusKeyword_1_0_0_1()); }
		'-'
		{ after(grammarAccess.getArithmeticExpressionAccess().getOperatorHyphenMinusKeyword_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getOperatorAsteriskKeyword_1_0_0_2()); }
		'*'
		{ after(grammarAccess.getArithmeticExpressionAccess().getOperatorAsteriskKeyword_1_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getOperatorSolidusKeyword_1_0_0_3()); }
		'/'
		{ after(grammarAccess.getArithmeticExpressionAccess().getOperatorSolidusKeyword_1_0_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getOperatorModKeyword_1_0_0_4()); }
		'mod'
		{ after(grammarAccess.getArithmeticExpressionAccess().getOperatorModKeyword_1_0_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getLightKeyword_0_0()); }
		'light'
		{ after(grammarAccess.getColorAccess().getLightKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getDarkKeyword_0_1()); }
		'dark'
		{ after(grammarAccess.getColorAccess().getDarkKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getRedKeyword_1_0()); }
		'red'
		{ after(grammarAccess.getColorAccess().getRedKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getGreenKeyword_1_1()); }
		'green'
		{ after(grammarAccess.getColorAccess().getGreenKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getBlueKeyword_1_2()); }
		'blue'
		{ after(grammarAccess.getColorAccess().getBlueKeyword_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getBlackKeyword_1_3()); }
		'black'
		{ after(grammarAccess.getColorAccess().getBlackKeyword_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getWhiteKeyword_1_4()); }
		'white'
		{ after(grammarAccess.getColorAccess().getWhiteKeyword_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getYellowKeyword_1_5()); }
		'yellow'
		{ after(grammarAccess.getColorAccess().getYellowKeyword_1_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sound__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundAccess().getSound1Keyword_0()); }
		'sound1'
		{ after(grammarAccess.getSoundAccess().getSound1Keyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSoundAccess().getSound2Keyword_1()); }
		'sound2'
		{ after(grammarAccess.getSoundAccess().getSound2Keyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getSoundAccess().getSound3Keyword_2()); }
		'sound3'
		{ after(grammarAccess.getSoundAccess().getSound3Keyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getSoundAccess().getSound4Keyword_3()); }
		'sound4'
		{ after(grammarAccess.getSoundAccess().getSound4Keyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buttons__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonsAccess().getCenterKeyword_0()); }
		'center'
		{ after(grammarAccess.getButtonsAccess().getCenterKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getButtonsAccess().getRightKeyword_1()); }
		'right'
		{ after(grammarAccess.getButtonsAccess().getRightKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getButtonsAccess().getLeftKeyword_2()); }
		'left'
		{ after(grammarAccess.getButtonsAccess().getLeftKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getButtonsAccess().getForwardKeyword_3()); }
		'forward'
		{ after(grammarAccess.getButtonsAccess().getForwardKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getButtonsAccess().getBackwardKeyword_4()); }
		'backward'
		{ after(grammarAccess.getButtonsAccess().getBackwardKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getTouchedKeyword_0()); }
		'touched'
		{ after(grammarAccess.getStateAccess().getTouchedKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getStateAccess().getReleasedKeyword_1()); }
		'released'
		{ after(grammarAccess.getStateAccess().getReleasedKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightLeft__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightLeftAccess().getLeftKeyword_0()); }
		'left'
		{ after(grammarAccess.getRightLeftAccess().getLeftKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRightLeftAccess().getRightKeyword_1()); }
		'right'
		{ after(grammarAccess.getRightLeftAccess().getRightKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHorizontalSensorsAccess().getGroup_0()); }
		(rule__HorizontalSensors__Group_0__0)
		{ after(grammarAccess.getHorizontalSensorsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getHorizontalSensorsAccess().getGroup_1()); }
		(rule__HorizontalSensors__Group_1__0)
		{ after(grammarAccess.getHorizontalSensorsAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getHorizontalSensorsAccess().getGroup_2()); }
		(rule__HorizontalSensors__Group_2__0)
		{ after(grammarAccess.getHorizontalSensorsAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getHorizontalSensorsAccess().getGroup_3()); }
		(rule__HorizontalSensors__Group_3__0)
		{ after(grammarAccess.getHorizontalSensorsAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getHorizontalSensorsAccess().getGroup_4()); }
		(rule__HorizontalSensors__Group_4__0)
		{ after(grammarAccess.getHorizontalSensorsAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getHorizontalSensorsAccess().getGroup_5()); }
		(rule__HorizontalSensors__Group_5__0)
		{ after(grammarAccess.getHorizontalSensorsAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getHorizontalSensorsAccess().getGroup_6()); }
		(rule__HorizontalSensors__Group_6__0)
		{ after(grammarAccess.getHorizontalSensorsAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
	'->'
	{ after(grammarAccess.getStatementAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
	rule__Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getEventAssignment_1()); }
	(rule__Statement__EventAssignment_1)
	{ after(grammarAccess.getStatementAccess().getEventAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives_2()); }
		(rule__Statement__Alternatives_2)
		{ after(grammarAccess.getStatementAccess().getAlternatives_2()); }
	)
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives_2()); }
		(rule__Statement__Alternatives_2)*
		{ after(grammarAccess.getStatementAccess().getAlternatives_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getActionAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getAlternatives_1()); }
	(rule__Action__Alternatives_1)
	{ after(grammarAccess.getActionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MovementAction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MovementAction__Group_0__0__Impl
	rule__MovementAction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementActionAccess().getDriveKeyword_0_0()); }
	'drive'
	{ after(grammarAccess.getMovementActionAccess().getDriveKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MovementAction__Group_0__1__Impl
	rule__MovementAction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementActionAccess().getDirectionAssignment_0_1()); }
	(rule__MovementAction__DirectionAssignment_0_1)
	{ after(grammarAccess.getMovementActionAccess().getDirectionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MovementAction__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementActionAccess().getGroup_0_2()); }
	(rule__MovementAction__Group_0_2__0)?
	{ after(grammarAccess.getMovementActionAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MovementAction__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MovementAction__Group_0_2__0__Impl
	rule__MovementAction__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementActionAccess().getWithKeyword_0_2_0()); }
	'with'
	{ after(grammarAccess.getMovementActionAccess().getWithKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MovementAction__Group_0_2__1__Impl
	rule__MovementAction__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementActionAccess().getSpeedKeyword_0_2_1()); }
	'speed'
	{ after(grammarAccess.getMovementActionAccess().getSpeedKeyword_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MovementAction__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementActionAccess().getSpeedAssignment_0_2_2()); }
	(rule__MovementAction__SpeedAssignment_0_2_2)
	{ after(grammarAccess.getMovementActionAccess().getSpeedAssignment_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MovementAction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MovementAction__Group_1__0__Impl
	rule__MovementAction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementActionAccess().getTurnKeyword_1_0()); }
	'turn'
	{ after(grammarAccess.getMovementActionAccess().getTurnKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MovementAction__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementActionAccess().getDirectionAssignment_1_1()); }
	(rule__MovementAction__DirectionAssignment_1_1)
	{ after(grammarAccess.getMovementActionAccess().getDirectionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MovementAction__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MovementAction__Group_2__0__Impl
	rule__MovementAction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementActionAccess().getMovementActionAction_2_0()); }
	()
	{ after(grammarAccess.getMovementActionAccess().getMovementActionAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MovementAction__Group_2__1__Impl
	rule__MovementAction__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementActionAccess().getStopKeyword_2_1()); }
	'stop'
	{ after(grammarAccess.getMovementActionAccess().getStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MovementAction__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementActionAccess().getDrivingKeyword_2_2()); }
	'driving'
	{ after(grammarAccess.getMovementActionAccess().getDrivingKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MovementAction__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MovementAction__Group_3__0__Impl
	rule__MovementAction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementActionAccess().getMovementActionAction_3_0()); }
	()
	{ after(grammarAccess.getMovementActionAccess().getMovementActionAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MovementAction__Group_3__1__Impl
	rule__MovementAction__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementActionAccess().getStopKeyword_3_1()); }
	'stop'
	{ after(grammarAccess.getMovementActionAccess().getStopKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MovementAction__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementActionAccess().getTurningKeyword_3_2()); }
	'turning'
	{ after(grammarAccess.getMovementActionAccess().getTurningKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SoundAction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group_0__0__Impl
	rule__SoundAction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getPlayKeyword_0_0()); }
	'play'
	{ after(grammarAccess.getSoundActionAccess().getPlayKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group_0__1__Impl
	rule__SoundAction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getSoundKeyword_0_1()); }
	'sound'
	{ after(grammarAccess.getSoundActionAccess().getSoundKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getSoundAssignment_0_2()); }
	(rule__SoundAction__SoundAssignment_0_2)
	{ after(grammarAccess.getSoundActionAccess().getSoundAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SoundAction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group_1__0__Impl
	rule__SoundAction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getSoundActionAction_1_0()); }
	()
	{ after(grammarAccess.getSoundActionAccess().getSoundActionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group_1__1__Impl
	rule__SoundAction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getStopKeyword_1_1()); }
	'stop'
	{ after(grammarAccess.getSoundActionAccess().getStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group_1__2__Impl
	rule__SoundAction__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getPlayingKeyword_1_2()); }
	'playing'
	{ after(grammarAccess.getSoundActionAccess().getPlayingKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoundAction__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoundActionAccess().getSoundKeyword_1_3()); }
	'sound'
	{ after(grammarAccess.getSoundActionAccess().getSoundKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColorBottomAction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorBottomAction__Group_0__0__Impl
	rule__ColorBottomAction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorBottomActionAccess().getSetKeyword_0_0()); }
	'set'
	{ after(grammarAccess.getColorBottomActionAccess().getSetKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorBottomAction__Group_0__1__Impl
	rule__ColorBottomAction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorBottomActionAccess().getBottomKeyword_0_1()); }
	'bottom'
	{ after(grammarAccess.getColorBottomActionAccess().getBottomKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorBottomAction__Group_0__2__Impl
	rule__ColorBottomAction__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorBottomActionAccess().getColorKeyword_0_2()); }
	'color'
	{ after(grammarAccess.getColorBottomActionAccess().getColorKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorBottomAction__Group_0__3__Impl
	rule__ColorBottomAction__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorBottomActionAccess().getToKeyword_0_3()); }
	'to'
	{ after(grammarAccess.getColorBottomActionAccess().getToKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorBottomAction__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorBottomActionAccess().getColorAssignment_0_4()); }
	(rule__ColorBottomAction__ColorAssignment_0_4)
	{ after(grammarAccess.getColorBottomActionAccess().getColorAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColorBottomAction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorBottomAction__Group_1__0__Impl
	rule__ColorBottomAction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorBottomActionAccess().getColorBottomActionAction_1_0()); }
	()
	{ after(grammarAccess.getColorBottomActionAccess().getColorBottomActionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorBottomAction__Group_1__1__Impl
	rule__ColorBottomAction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorBottomActionAccess().getTurnKeyword_1_1()); }
	'turn'
	{ after(grammarAccess.getColorBottomActionAccess().getTurnKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorBottomAction__Group_1__2__Impl
	rule__ColorBottomAction__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorBottomActionAccess().getOffKeyword_1_2()); }
	'off'
	{ after(grammarAccess.getColorBottomActionAccess().getOffKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorBottomAction__Group_1__3__Impl
	rule__ColorBottomAction__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorBottomActionAccess().getBottomKeyword_1_3()); }
	'bottom'
	{ after(grammarAccess.getColorBottomActionAccess().getBottomKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorBottomAction__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorBottomActionAccess().getLedsKeyword_1_4()); }
	'leds'
	{ after(grammarAccess.getColorBottomActionAccess().getLedsKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColorTopAction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorTopAction__Group_0__0__Impl
	rule__ColorTopAction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorTopActionAccess().getSetKeyword_0_0()); }
	'set'
	{ after(grammarAccess.getColorTopActionAccess().getSetKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorTopAction__Group_0__1__Impl
	rule__ColorTopAction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorTopActionAccess().getTopKeyword_0_1()); }
	'top'
	{ after(grammarAccess.getColorTopActionAccess().getTopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorTopAction__Group_0__2__Impl
	rule__ColorTopAction__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorTopActionAccess().getColorKeyword_0_2()); }
	'color'
	{ after(grammarAccess.getColorTopActionAccess().getColorKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorTopAction__Group_0__3__Impl
	rule__ColorTopAction__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorTopActionAccess().getToKeyword_0_3()); }
	'to'
	{ after(grammarAccess.getColorTopActionAccess().getToKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorTopAction__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorTopActionAccess().getColorAssignment_0_4()); }
	(rule__ColorTopAction__ColorAssignment_0_4)
	{ after(grammarAccess.getColorTopActionAccess().getColorAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColorTopAction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorTopAction__Group_1__0__Impl
	rule__ColorTopAction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorTopActionAccess().getColorTopActionAction_1_0()); }
	()
	{ after(grammarAccess.getColorTopActionAccess().getColorTopActionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorTopAction__Group_1__1__Impl
	rule__ColorTopAction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorTopActionAccess().getTurnKeyword_1_1()); }
	'turn'
	{ after(grammarAccess.getColorTopActionAccess().getTurnKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorTopAction__Group_1__2__Impl
	rule__ColorTopAction__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorTopActionAccess().getOffKeyword_1_2()); }
	'off'
	{ after(grammarAccess.getColorTopActionAccess().getOffKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorTopAction__Group_1__3__Impl
	rule__ColorTopAction__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorTopActionAccess().getTopKeyword_1_3()); }
	'top'
	{ after(grammarAccess.getColorTopActionAccess().getTopKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorTopAction__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorTopActionAccess().getLedsKeyword_1_4()); }
	'leds'
	{ after(grammarAccess.getColorTopActionAccess().getLedsKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
	'If'
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getConditionAssignment_1()); }
	(rule__IfStatement__ConditionAssignment_1)
	{ after(grammarAccess.getIfStatementAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getIfStatementAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getIfStatementAccess().getActionAssignment_3()); }
		(rule__IfStatement__ActionAssignment_3)
		{ after(grammarAccess.getIfStatementAccess().getActionAssignment_3()); }
	)
	(
		{ before(grammarAccess.getIfStatementAccess().getActionAssignment_3()); }
		(rule__IfStatement__ActionAssignment_3)*
		{ after(grammarAccess.getIfStatementAccess().getActionAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getEndKeyword_4()); }
	'End'
	{ after(grammarAccess.getIfStatementAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_5()); }
	'if'
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpperEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperEvent__Group__0__Impl
	rule__UpperEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperEventAccess().getOnKeyword_0()); }
	'On'
	{ after(grammarAccess.getUpperEventAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperEvent__Group__1__Impl
	rule__UpperEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperEventAccess().getButtonsAssignment_1()); }
	(rule__UpperEvent__ButtonsAssignment_1)
	{ after(grammarAccess.getUpperEventAccess().getButtonsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperEvent__Group__2__Impl
	rule__UpperEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperEventAccess().getGroup_2()); }
	(rule__UpperEvent__Group_2__0)*
	{ after(grammarAccess.getUpperEventAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperEvent__Group__3__Impl
	rule__UpperEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperEventAccess().getButtonKeyword_3()); }
	'button'
	{ after(grammarAccess.getUpperEventAccess().getButtonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperEvent__Group__4__Impl
	rule__UpperEvent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperEventAccess().getStateAssignment_4()); }
	(rule__UpperEvent__StateAssignment_4)
	{ after(grammarAccess.getUpperEventAccess().getStateAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperEvent__Group__5__Impl
	rule__UpperEvent__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperEventAccess().getDoKeyword_5()); }
	'do'
	{ after(grammarAccess.getUpperEventAccess().getDoKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperEvent__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperEventAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getUpperEventAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpperEvent__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperEvent__Group_2__0__Impl
	rule__UpperEvent__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperEventAccess().getAndKeyword_2_0()); }
	'and'
	{ after(grammarAccess.getUpperEventAccess().getAndKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperEvent__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperEventAccess().getButtonsAssignment_2_1()); }
	(rule__UpperEvent__ButtonsAssignment_2_1)
	{ after(grammarAccess.getUpperEventAccess().getButtonsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProxEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProxEvent__Group__0__Impl
	rule__ProxEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProxEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxEventAccess().getOnKeyword_0()); }
	'On'
	{ after(grammarAccess.getProxEventAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProxEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProxEvent__Group__1__Impl
	rule__ProxEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProxEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxEventAccess().getSensorAssignment_1()); }
	(rule__ProxEvent__SensorAssignment_1)
	{ after(grammarAccess.getProxEventAccess().getSensorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProxEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProxEvent__Group__2__Impl
	rule__ProxEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProxEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxEventAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getProxEventAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProxEvent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProxEvent__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProxEvent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxEventAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getProxEventAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_0__0__Impl
	rule__Sensor__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getDirectionAssignment_0_0()); }
	(rule__Sensor__DirectionAssignment_0_0)
	{ after(grammarAccess.getSensorAccess().getDirectionAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_0__1__Impl
	rule__Sensor__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensor_typeAssignment_0_1()); }
	(rule__Sensor__Sensor_typeAssignment_0_1)
	{ after(grammarAccess.getSensorAccess().getSensor_typeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_0__2__Impl
	rule__Sensor__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorKeyword_0_2()); }
	'sensor'
	{ after(grammarAccess.getSensorAccess().getSensorKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_0__3__Impl
	rule__Sensor__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getDetectingKeyword_0_3()); }
	'detecting'
	{ after(grammarAccess.getSensorAccess().getDetectingKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getAlternatives_0_4()); }
	(rule__Sensor__Alternatives_0_4)
	{ after(grammarAccess.getSensorAccess().getAlternatives_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group_0_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_0_4_1__0__Impl
	rule__Sensor__Group_0_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_0_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getNoKeyword_0_4_1_0()); }
	'no'
	{ after(grammarAccess.getSensorAccess().getNoKeyword_0_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_0_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_0_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_0_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getProximityKeyword_0_4_1_1()); }
	'proximity'
	{ after(grammarAccess.getSensorAccess().getProximityKeyword_0_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_1__0__Impl
	rule__Sensor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getDirectionAssignment_1_0()); }
	(rule__Sensor__DirectionAssignment_1_0)
	{ after(grammarAccess.getSensorAccess().getDirectionAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_1__1__Impl
	rule__Sensor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensor_typeAssignment_1_1()); }
	(rule__Sensor__Sensor_typeAssignment_1_1)
	{ after(grammarAccess.getSensorAccess().getSensor_typeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_1__2__Impl
	rule__Sensor__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorKeyword_1_2()); }
	'sensor'
	{ after(grammarAccess.getSensorAccess().getSensorKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_1__3__Impl
	rule__Sensor__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getDetectingKeyword_1_3()); }
	'detecting'
	{ after(grammarAccess.getSensorAccess().getDetectingKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getAlternatives_1_4()); }
	(rule__Sensor__Alternatives_1_4)
	{ after(grammarAccess.getSensorAccess().getAlternatives_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group_1_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_1_4_1__0__Impl
	rule__Sensor__Group_1_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_1_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getNoKeyword_1_4_1_0()); }
	'no'
	{ after(grammarAccess.getSensorAccess().getNoKeyword_1_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_1_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_1_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_1_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getProximityKeyword_1_4_1_1()); }
	'proximity'
	{ after(grammarAccess.getSensorAccess().getProximityKeyword_1_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TapEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TapEvent__Group__0__Impl
	rule__TapEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TapEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTapEventAccess().getEventAction_0()); }
	()
	{ after(grammarAccess.getTapEventAccess().getEventAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TapEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TapEvent__Group__1__Impl
	rule__TapEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TapEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTapEventAccess().getOnKeyword_1()); }
	'On'
	{ after(grammarAccess.getTapEventAccess().getOnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TapEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TapEvent__Group__2__Impl
	rule__TapEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TapEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTapEventAccess().getTapKeyword_2()); }
	'tap'
	{ after(grammarAccess.getTapEventAccess().getTapKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TapEvent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TapEvent__Group__3__Impl
	rule__TapEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TapEvent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTapEventAccess().getDoKeyword_3()); }
	'do'
	{ after(grammarAccess.getTapEventAccess().getDoKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TapEvent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TapEvent__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TapEvent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTapEventAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getTapEventAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClapEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClapEvent__Group__0__Impl
	rule__ClapEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClapEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClapEventAccess().getEventAction_0()); }
	()
	{ after(grammarAccess.getClapEventAccess().getEventAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClapEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClapEvent__Group__1__Impl
	rule__ClapEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClapEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClapEventAccess().getOnKeyword_1()); }
	'On'
	{ after(grammarAccess.getClapEventAccess().getOnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClapEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClapEvent__Group__2__Impl
	rule__ClapEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClapEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClapEventAccess().getClapKeyword_2()); }
	'clap'
	{ after(grammarAccess.getClapEventAccess().getClapKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClapEvent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClapEvent__Group__3__Impl
	rule__ClapEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClapEvent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClapEventAccess().getDoKeyword_3()); }
	'do'
	{ after(grammarAccess.getClapEventAccess().getDoKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClapEvent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClapEvent__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClapEvent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClapEventAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getClapEventAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLeftSensorAssignment_0()); }
	(rule__Condition__LeftSensorAssignment_0)
	{ after(grammarAccess.getConditionAccess().getLeftSensorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getGroup_1()); }
	(rule__Condition__Group_1__0)?
	{ after(grammarAccess.getConditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__0__Impl
	rule__Condition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getOperatorAssignment_1_0()); }
	(rule__Condition__OperatorAssignment_1_0)
	{ after(grammarAccess.getConditionAccess().getOperatorAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRightSensorAssignment_1_1()); }
	(rule__Condition__RightSensorAssignment_1_1)
	{ after(grammarAccess.getConditionAccess().getRightSensorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group__0__Impl
	rule__ArithmeticExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getLeftAssignment_0()); }
	(rule__ArithmeticExpression__LeftAssignment_0)
	{ after(grammarAccess.getArithmeticExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getGroup_1()); }
	(rule__ArithmeticExpression__Group_1__0)?
	{ after(grammarAccess.getArithmeticExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group_1__0__Impl
	rule__ArithmeticExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getOperatorAssignment_1_0()); }
	(rule__ArithmeticExpression__OperatorAssignment_1_0)
	{ after(grammarAccess.getArithmeticExpressionAccess().getOperatorAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getRightAssignment_1_1()); }
	(rule__ArithmeticExpression__RightAssignment_1_1)
	{ after(grammarAccess.getArithmeticExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EIntegerObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EIntegerObject__Group__0__Impl
	rule__EIntegerObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EIntegerObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntegerObjectAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntegerObjectAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EIntegerObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EIntegerObject__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EIntegerObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntegerObjectAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntegerObjectAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__0__Impl
	rule__Color__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getAlternatives_0()); }
	(rule__Color__Alternatives_0)?
	{ after(grammarAccess.getColorAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getAlternatives_1()); }
	(rule__Color__Alternatives_1)
	{ after(grammarAccess.getColorAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HorizontalSensors__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSensors__Group_0__0__Impl
	rule__HorizontalSensors__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSensorsAccess().getFrontKeyword_0_0()); }
	'front'
	{ after(grammarAccess.getHorizontalSensorsAccess().getFrontKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSensors__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSensorsAccess().getLeftKeyword_0_1()); }
	'left'
	{ after(grammarAccess.getHorizontalSensorsAccess().getLeftKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HorizontalSensors__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSensors__Group_1__0__Impl
	rule__HorizontalSensors__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSensorsAccess().getFrontKeyword_1_0()); }
	'front'
	{ after(grammarAccess.getHorizontalSensorsAccess().getFrontKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSensors__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSensorsAccess().getLeftMiddleKeyword_1_1()); }
	'left/middle'
	{ after(grammarAccess.getHorizontalSensorsAccess().getLeftMiddleKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HorizontalSensors__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSensors__Group_2__0__Impl
	rule__HorizontalSensors__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSensorsAccess().getFrontKeyword_2_0()); }
	'front'
	{ after(grammarAccess.getHorizontalSensorsAccess().getFrontKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSensors__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSensorsAccess().getMiddleKeyword_2_1()); }
	'middle'
	{ after(grammarAccess.getHorizontalSensorsAccess().getMiddleKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HorizontalSensors__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSensors__Group_3__0__Impl
	rule__HorizontalSensors__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSensorsAccess().getFrontKeyword_3_0()); }
	'front'
	{ after(grammarAccess.getHorizontalSensorsAccess().getFrontKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSensors__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSensorsAccess().getRightMiddleKeyword_3_1()); }
	'right/middle'
	{ after(grammarAccess.getHorizontalSensorsAccess().getRightMiddleKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HorizontalSensors__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSensors__Group_4__0__Impl
	rule__HorizontalSensors__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSensorsAccess().getFrontKeyword_4_0()); }
	'front'
	{ after(grammarAccess.getHorizontalSensorsAccess().getFrontKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSensors__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSensorsAccess().getRightKeyword_4_1()); }
	'right'
	{ after(grammarAccess.getHorizontalSensorsAccess().getRightKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HorizontalSensors__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSensors__Group_5__0__Impl
	rule__HorizontalSensors__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSensorsAccess().getBackwardKeyword_5_0()); }
	'backward'
	{ after(grammarAccess.getHorizontalSensorsAccess().getBackwardKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSensors__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSensorsAccess().getLeftKeyword_5_1()); }
	'left'
	{ after(grammarAccess.getHorizontalSensorsAccess().getLeftKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HorizontalSensors__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSensors__Group_6__0__Impl
	rule__HorizontalSensors__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSensorsAccess().getBackwardKeyword_6_0()); }
	'backward'
	{ after(grammarAccess.getHorizontalSensorsAccess().getBackwardKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HorizontalSensors__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalSensors__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHorizontalSensorsAccess().getRightKeyword_6_1()); }
	'right'
	{ after(grammarAccess.getHorizontalSensorsAccess().getRightKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ThymioDSL__StatementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThymioDSLAccess().getStatementStatementParserRuleCall_0()); }
		ruleStatement
		{ after(grammarAccess.getThymioDSLAccess().getStatementStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__EventAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getEventEventParserRuleCall_1_0()); }
		ruleEvent
		{ after(grammarAccess.getStatementAccess().getEventEventParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IfstatementAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIfstatementIfStatementParserRuleCall_2_0_0()); }
		ruleIfStatement
		{ after(grammarAccess.getStatementAccess().getIfstatementIfStatementParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ActionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getActionActionParserRuleCall_2_1_0()); }
		ruleAction
		{ after(grammarAccess.getStatementAccess().getActionActionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__DirectionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMovementActionAccess().getDirectionAlternatives_0_1_0()); }
		(rule__MovementAction__DirectionAlternatives_0_1_0)
		{ after(grammarAccess.getMovementActionAccess().getDirectionAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__SpeedAssignment_0_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMovementActionAccess().getSpeedArithmeticExpressionParserRuleCall_0_2_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getMovementActionAccess().getSpeedArithmeticExpressionParserRuleCall_0_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MovementAction__DirectionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMovementActionAccess().getDirectionRightLeftParserRuleCall_1_1_0()); }
		ruleRightLeft
		{ after(grammarAccess.getMovementActionAccess().getDirectionRightLeftParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoundAction__SoundAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoundActionAccess().getSoundSoundParserRuleCall_0_2_0()); }
		ruleSound
		{ after(grammarAccess.getSoundActionAccess().getSoundSoundParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorBottomAction__ColorAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorBottomActionAccess().getColorColorParserRuleCall_0_4_0()); }
		ruleColor
		{ after(grammarAccess.getColorBottomActionAccess().getColorColorParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTopAction__ColorAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorTopActionAccess().getColorColorParserRuleCall_0_4_0()); }
		ruleColor
		{ after(grammarAccess.getColorTopActionAccess().getColorColorParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getConditionConditionParserRuleCall_1_0()); }
		ruleCondition
		{ after(grammarAccess.getIfStatementAccess().getConditionConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ActionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getActionActionParserRuleCall_3_0()); }
		ruleAction
		{ after(grammarAccess.getIfStatementAccess().getActionActionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__ButtonsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpperEventAccess().getButtonsButtonsParserRuleCall_1_0()); }
		ruleButtons
		{ after(grammarAccess.getUpperEventAccess().getButtonsButtonsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__ButtonsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpperEventAccess().getButtonsButtonsParserRuleCall_2_1_0()); }
		ruleButtons
		{ after(grammarAccess.getUpperEventAccess().getButtonsButtonsParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperEvent__StateAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpperEventAccess().getStateStateParserRuleCall_4_0()); }
		ruleState
		{ after(grammarAccess.getUpperEventAccess().getStateStateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProxEvent__SensorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProxEventAccess().getSensorSensorParserRuleCall_1_0()); }
		ruleSensor
		{ after(grammarAccess.getProxEventAccess().getSensorSensorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__DirectionAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getDirectionHorizontalSensorsParserRuleCall_0_0_0()); }
		ruleHorizontalSensors
		{ after(grammarAccess.getSensorAccess().getDirectionHorizontalSensorsParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Sensor_typeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getSensor_typeHorizontalKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getSensorAccess().getSensor_typeHorizontalKeyword_0_1_0()); }
			'horizontal'
			{ after(grammarAccess.getSensorAccess().getSensor_typeHorizontalKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getSensorAccess().getSensor_typeHorizontalKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__DirectionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getDirectionRightLeftParserRuleCall_1_0_0()); }
		ruleRightLeft
		{ after(grammarAccess.getSensorAccess().getDirectionRightLeftParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Sensor_typeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getSensor_typeGroundKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getSensorAccess().getSensor_typeGroundKeyword_1_1_0()); }
			'ground'
			{ after(grammarAccess.getSensorAccess().getSensor_typeGroundKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getSensorAccess().getSensor_typeGroundKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__LeftSensorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getLeftSensorSensorParserRuleCall_0_0()); }
		ruleSensor
		{ after(grammarAccess.getConditionAccess().getLeftSensorSensorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__OperatorAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOperatorAlternatives_1_0_0()); }
		(rule__Condition__OperatorAlternatives_1_0_0)
		{ after(grammarAccess.getConditionAccess().getOperatorAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__RightSensorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getRightSensorSensorParserRuleCall_1_1_0()); }
		ruleSensor
		{ after(grammarAccess.getConditionAccess().getRightSensorSensorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getLeftEIntegerObjectParserRuleCall_0_0()); }
		ruleEIntegerObject
		{ after(grammarAccess.getArithmeticExpressionAccess().getLeftEIntegerObjectParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__OperatorAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getOperatorAlternatives_1_0_0()); }
		(rule__ArithmeticExpression__OperatorAlternatives_1_0_0)
		{ after(grammarAccess.getArithmeticExpressionAccess().getOperatorAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getRightEIntegerObjectParserRuleCall_1_1_0()); }
		ruleEIntegerObject
		{ after(grammarAccess.getArithmeticExpressionAccess().getRightEIntegerObjectParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
