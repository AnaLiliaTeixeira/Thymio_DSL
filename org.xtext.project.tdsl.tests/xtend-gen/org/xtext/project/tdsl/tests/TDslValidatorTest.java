/**
 * generated by Xtext 2.34.0
 */
package org.xtext.project.tdsl.tests;

import com.google.inject.Inject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.extensions.InjectionExtension;
import org.eclipse.xtext.testing.util.ParseHelper;
import org.eclipse.xtext.testing.validation.ValidationTestHelper;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.xtext.project.tdsl.validation.TDslValidator;
import thymio_DSL.ThymioDSL;
import thymio_DSL.Thymio_DSLPackage;

@ExtendWith(InjectionExtension.class)
@InjectWith(TDslInjectorProvider.class)
@SuppressWarnings("all")
public class TDslValidatorTest {
  @Inject
  private ParseHelper<ThymioDSL> parseHelper;

  @Inject
  private ValidationTestHelper validator;

  @BeforeEach
  public void setUp() {
    boolean _containsKey = EPackage.Registry.INSTANCE.containsKey(Thymio_DSLPackage.eNS_URI);
    boolean _not = (!_containsKey);
    if (_not) {
      EPackage.Registry.INSTANCE.put(Thymio_DSLPackage.eNS_URI, Thymio_DSLPackage.eINSTANCE);
    }
  }

  @Test
  public void testRepeatedButtons() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("s");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("-> On center and center button touched do:");
      _builder.newLine();
      _builder.append("\t\t\t");
      _builder.append("- drive forward");
      _builder.newLine();
      final ThymioDSL result = this.parseHelper.parse(_builder);
      Assertions.assertNotNull(result);
      this.validator.assertError(result, Thymio_DSLPackage.eINSTANCE.getUpperEvent(), TDslValidator.DUPLICATE_BUTTON_WARNING, 
        "The button \'center\' is repeated and does not make any difference, so it is redundant.");
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
